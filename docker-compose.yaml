services:
  ######################################################################################################################
  # Microservices
  ######################################################################################################################
  location-service:
    image: positionpal/location-service:4.0.7@sha256:da8b981c6b50ae9e74f766563cb04d1119846cd01ac4778688cd8f4b08a79ade
    container_name: location-service
    depends_on:
      rabbitmq-broker:
        condition: service_healthy
      cassandra-db:
        condition: service_healthy
      cassandra-init:
        condition: service_completed_successfully
    environment:
      MAPBOX_API_KEY: ${MAPBOX_API_KEY}
      AKKA_LICENSE_KEY: ${AKKA_LICENSE_KEY}
      RABBITMQ_HOST: rabbitmq-broker
      RABBITMQ_VIRTUAL_HOST: /
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: admin
      GRPC_PORT: 5052
      HTTP_PORT: 8080
      PRODUCTION: false
      CASSANDRA_CONTACT_POINT: cassandra-db:9042
      CASSANDRA_USERNAME: cassandra
      CASSANDRA_PASSWORD: cassandra
    networks:
      - back-tier

  notification-service:
    image: positionpal/notification-service:2.3.1@sha256:1178471040674c453937f0a068f306498330e3517b2ccc02e23dd4bf7ab2891f
    container_name: notification-service
    depends_on:
      rabbitmq-broker:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq-broker
      RABBITMQ_VIRTUAL_HOST: /
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: admin
      RABBITMQ_PORT: 5672
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres-db
      POSTGRES_PORT: 5432
      GRPC_PORT: 5052
      FIREBASE_SERVICE_ACCOUNT_FILE_PATH: /service-account.json
    volumes:
      - ./secrets/service-account.json:/service-account.json
    networks:
      - back-tier

  user-service:
    image: positionpal/user-service:1.4.1@sha256:5d4f0dce7fabac4fcc57c2cbcb99c561482386c9607e266e6f46e83bd03e3d35
    container_name: user-service
    depends_on:
      postgres-db:
        condition: service_healthy
      rabbitmq-broker:
        condition: service_healthy
    environment:
      POSTGRES_DB: "users_and_groups"
      POSTGRES_HOST: postgres-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      JWT_SECRET: mUOoxn4zZQU6Vbpe1WFO7wou5YZe5zbsoSLVSlMGn4I= # don't worry, no secret exposed. This was randomly generated and is not used in production!
      RABBITMQ_HOST: rabbitmq-broker
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: admin
      USER_SERVICE_PORT: 5052
    networks:
      - back-tier

  gateway:
    image: positionpal/gateway:2.6.3@sha256:11a2a66fa03ae4d950a95168f2169b34d014350fbf54a03f25bda98717d158af
    container_name: gateway
    depends_on:
      - user-service
      - location-service
      - notification-service
    ports:
      - "3000:3000"
    environment:
      LOCATION_SERVICE_HTTP_URL: location-service:8080
      LOCATION_SERVICE_GRPC_URL: location-service:5052
      NOTIFICATION_SERVICE_GRPC_URL: notification-service:5052
      USER_SERVICE_URL: user-service:5052
    networks:
      - back-tier
      - front-tier

  ######################################################################################################################
  # Infrastructure components
  ######################################################################################################################
  cassandra-db:
    image: cassandra:latest@sha256:70b40a2025d450f7865c5ec6f1ebea13108166f81fe41462069690cb4d9690f2
    container_name: cassandra-db
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      - back-tier

  cassandra-init:
    image: cassandra:latest@sha256:70b40a2025d450f7865c5ec6f1ebea13108166f81fe41462069690cb4d9690f2
    container_name: cassandra-init
    depends_on:
      cassandra-db:
        condition: service_healthy
    volumes:
      - ./scripts/init-cassandra.sh:/init.sh
    command: ["/bin/bash", "/init.sh"]
    networks:
      - back-tier

  rabbitmq-broker:
    image: rabbitmq:4-management@sha256:c2f5153a7759bf6a675ff0b2544f09fc24775c76448e585e58802e29925d435d
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: admin
    # ports:
    #   - "15672:15672" # the port the dashboard web service will be available from, for debugging
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - back-tier

  postgres-db:
    image: postgres:17.3@sha256:0321e2252ebfeecb8bc1a899755084d29bce872953e1a5a3e25ec0860b739098
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./.tmp/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres'"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - back-tier

networks:
  back-tier:
    driver: bridge
    internal: false
  front-tier:
    driver: bridge
    internal: false
